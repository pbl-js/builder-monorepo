// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  userId Int     @unique
  User   User    @relation(fields: [userId], references: [id])
}

model User {
  id      Int      @id @default(autoincrement())
  name    String?  @db.VarChar(255)
  email   String   @unique @db.VarChar(255)
  Profile Profile?
}

// Builder //
enum ComponentType {
  CUSTOM
  TEXT
  WRAPPER
}

model Model {
  id             Int     @id @default(autoincrement())
  name           String
  destinationUrl String
  drafts         Draft[]
}

model Draft {
  id      Int   @id @default(autoincrement())
  model   Model @relation(fields: [modelId], references: [id])
  modelId Int   @unique

  name       String
  targeting  Json
  components Component[]
}

model Component {
  id      Int   @id @default(autoincrement())
  draft   Draft @relation(fields: [draftId], references: [id])
  draftId Int   @unique

  componentType ComponentType
  jsxName       String
  layerName     String
  parentId      Int
  styles        Json
  inputs        Prop[]
}

model OriginComponent {
  id Int @id @default(autoincrement())

  name         String
  styles       Json
  originInputs Prop[]
}

// Prop
enum ValueType {
  STRING
  NUMBER
  OBJECT
}

model PropValueString {
  id          Int       @id @default(autoincrement())
  propValue   PropValue @relation(fields: [propValueId], references: [id])
  propValueId Int       @unique

  value String
}

model PropValueNumber {
  id          Int       @id @default(autoincrement())
  propValue   PropValue @relation(fields: [propValueId], references: [id])
  propValueId Int       @unique

  value Int
}

model PropValueObjectFragment {
  id                Int             @id @default(autoincrement())
  propValueObject   PropValueObject @relation(fields: [propValueObjectId], references: [id])
  propValueObjectId Int             @unique

  propValue   PropValue @relation(fields: [propValueId], references: [id])
  propValueId Int       @unique
  key         String
}

model PropValueObject {
  id          Int       @id @default(autoincrement())
  propValue   PropValue @relation(fields: [propValueId], references: [id])
  propValueId Int       @unique

  fields PropValueObjectFragment[]
}

model PropValue {
  id                      Int                      @id @default(autoincrement())
  prop                    Prop                     @relation(fields: [propId], references: [id])
  propId                  Int                      @unique
  propValueObjectFragment PropValueObjectFragment?

  stringValue PropValueString?
  numberValue PropValueNumber?
  objectValue PropValueObject?
}

model Prop {
  id          Int        @id @default(autoincrement())
  component   Component? @relation(fields: [componentId], references: [id])
  componentId Int?       @unique

  originComponent   OriginComponent? @relation(fields: [originComponentId], references: [id])
  originComponentId Int?             @unique

  name      String     @unique
  valueType ValueType
  value     PropValue?
}
